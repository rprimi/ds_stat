---
title: "Tipos de dados no R"
format: html
editor: source
---

## Estrutura de dados (objetos) no R (Kobacoff, 2015)

![](imagens/datastruc.png)

![](imagens/data-structures-overview.png)

![](imagens/summary-tree-atomic.png)

-   Vetores https://www.rkabacoff.com/project/quickr-project/

<https://stringr.tidyverse.org>

```{r, eval=FALSE, warning=FALSE}

a <- c(1, 2, 5, 3, 6, 2, 4)
b <- c("one", "two", "three")
c <- c(TRUE, TRUE, TRUE, FALSE, TRUE, FALSE)


typeof(a)
typeof(b)
typeof(c)

d <- c(1L, 2L, 5L, 3L, 6L, -2L, 4L)
typeof(d)

a[1:3]



```

```{r}
c(a, b)
c(b, c)
c(b , as.integer(c))
c(a, c)

```

```{r}

class(a)
class(b)
class(c)

str(a)
str(b)
str(c)


```

-   Vetores nomeados

```{r}

v <- c(x = 1, y = 2, z = 4)
class(v)
str(v)

attributes(v)

v["z"]

v[3]

names(v)


```

-   Subsetting

```{r}

x <- c("one", "two", "three", "four", "five")
names(x) <- c("A", "B", "C", "D", "E")

x["B"]
x[5]


x
x[c(3, 2, 5)]

x
x[c(1, 1, 5, 5, 5, 2)]


x <- c(10, 3, NA, 5, 8, 1, NA)
mean(x, na.rm = TRUE)

l <- is.na(x)
!l
!-5


x[!l]

x[ !is.na(x) ]

x[ !is.na(x) ]

`[`()

```

-   Matrizes

```{r, eval=FALSE, warning=FALSE}

y <- matrix(1:20, nrow=5, ncol=4)
y <- 1:20

y
y[, 1]

class(y)
typeof(y)
str(y) 
attributes(y)

library(dplyr)
glimpse(y)




a <- c(1,26,24,68)

rnames <- c("R1", "R2")
cnames <- c("C1", "C2") 
matriz <- matrix(
        a, nrow=2, ncol=2, byrow=TRUE,
        dimnames=list(rnames, cnames)
        )

matriz
attributes(matriz)
matriz
matriz["R1", "C2"]

class(matriz)
typeof(matriz)
str(matriz)


matriz[1,2] <- "1"


```

-   Data frames

```{r, eval=FALSE, warning=FALSE}

patientID <- c(1, 2, 3, 4)
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")

df <- data.frame(patientID, age, diabetes, status)
df <- tibble(patientID, age, diabetes, status)
df

class(df)
typeof(df)

str(df)
glimpse(df)

df[1 ,  ]
df[ ,  1]

typeof(df[1 ,  ])
typeof(df[ ,  1])

str(df[1 ,  ])

# df$sintomas <- I(list(c(1, 4), c(1, 2, 3, 4), c(1), c(2,4)))


```

-   Factors

<https://forcats.tidyverse.org/articles/forcats.html>

```{r, eval=FALSE, warning=FALSE}


status <- c("ruim", "bom", "arrazou", "ruim", "muito bom", "arrazou")
class(status)
typeof(status)


status <- factor(status, levels=c("ruim", "bom", "muito bom", "excelente", "arrazou"))

typeof(status)
as.numeric(status)
as.character(status)
levels(status)



sex <- c(1, 2, 1, 1, 2, 2, 1, 1)
sex
str(sex)


sex <- factor(sex)
sex
str(sex)
levels(sex)

sex <- factor(sex, labels = c("M", "F"))
str(sex)

forcats::





```

-   Lists

```{r, eval=FALSE, warning=FALSE}

g <- "My First List"
h <- c(25, 26, 18, 39)
j <- matrix(1:10, nrow=5)
k <- c("one", "two", "three")

mylist <- list(title=g, ages=h, j, k)
class(mylist)

mylist
names(mylist)

mylist$title

mylist[["title"]]

mylist
mylist[3]
mylist[[3]]


mylist[[1]]


```

```{r}

x1 <- list(c(1, 2), c(3, 4))
x2 <- list(list(1, 2), list(3, 4))
x3 <- list(a = 1, b = list( c= 2, d = list(e = 3)))

x1[[1]][[1]][[1]]

x3$b$d$e
        
        
x1[[1]]

str(x2)
str(x2[[1]])

x2[[1]][[1]]

x2[[2]][[2]]

x2[[1]]


```

![](imagens/lists-structure.png)

![](imagens/lists-subsetting.png) \## Sumario dos comandos

```{r}
c()
[[]]

names()
typeof()
str()
attributes()
calss()
list()
factor()

as.numeric()
as.character()
as.data.frame()
as.list()

```
